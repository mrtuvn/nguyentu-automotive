@layer reset, framework, tailwind, base, layout, components, utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --base-max-width: 1264px;
  --clr-primary-500: hsl(219, 76%, 25%);
}

@layer reset {
  @media (prefers-reduced-motion: no-preference) {
    :has(:target) {
      scroll-behavior: smooth;
    }
  }

  body {
    min-height: 100svh;
  }

  * {
    margin: 0;
    padding: 0;
    font: inherit;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    text-wrap: balance;
  }

  img,
  picture,
  svg,
  video {
    display: block;
    max-width: 100%;
  }
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer framework {
  .swiper {
    width: 100%;
    height: 100%;
  }

  .swiper-slide {
    text-align: center;
    font-size: 18px;
    background: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .swiper-slide img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

@layer tailwind {
  .container {
    @apply max-w-base;
  }
}

@layer base {
}

@layer layout {
}

@layer components {
  .visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  .flow > * + * {
    margin-top: var(--flow-spacing, 1em);
  }

  .even-columns {
    display: flex;
    gap: 1rem;
  }

  .content-grid {
    --padding-inline: 1rem;
    --content-max-width: 900px;
    --breakout-max-width: 1200px;

    --breakout-size: calc(
      (var(--breakout-max-width) - var(--content-max-width)) / 2
    );

    display: grid;
    grid-template-columns:
      [full-width-start] minmax(var(--padding-inline), 1fr)
      [breakout-start] minmax(0, var(--breakout-size))
      [content-start] min(
        100% - (var(--padding-inline) * 2),
        var(--content-max-width)
      )
      [content-end]
      minmax(0, var(--breakout-size)) [breakout-end]
      minmax(var(--padding-inline), 1fr) [full-width-end];
  }

  .content-grid > :not(.breakout, .full-width),
  .full-width > :not(.breakout, .full-width) {
    grid-column: content;
  }

  .content-grid > .breakout {
    grid-column: breakout;
  }

  .content-grid > .full-width {
    grid-column: full-width;

    display: grid;
    grid-template-columns: inherit;
  }

  .section-padding {
    padding-block: 2.5rem;
  }

  .bg-primary {
    background: var(--clr-primary-500);
  }

  .call-to-action {
    padding: 1rem;
    background: hsl(0 0% 100% / 0.15);
  }

  img.full-width {
    width: 100%;
    max-height: 45vh;
    object-fit: cover;
  }

  .primary-header {
    padding-block: 1rem;
    margin-block-end: 3rem;
    background: var(--clr-accent-200);
    color: var(--clr-primary-500);
  }

  .primary-header__layout {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .logo {
    max-width: 250px;
  }

  nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: max(5vw, 1rem);
  }

  nav a {
    color: inherit;
    text-decoration: none;
  }

  nav a:hover,
  nav a:focus {
    color: var(--clr-accent-500);
    text-decoration: underline;
  }
}

@layer utilities {
  .or {
    outline: 1px solid red;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}
